name: Build Mod
on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path:
            dc-1000x-cells
      - name: Create SteamCmd Directory
        id: steamcmd-prepare
        shell: pwsh
        run: |
          $TMP_DIR = [System.IO.Path]::GetTempPath()
          [string] $NAME = [System.Guid]::NewGuid()
          $FULL_PATH = Join-Path $TMP_DIR $NAME
          New-Item -ItemType Directory $FULL_PATH
          New-Item -ItemType Directory dead-cells
          echo "steamdir=$FULL_PATH" >> $env:GITHUB_OUTPUT
      - name: Dead Cells Cache Restore
        uses: actions/cache/restore@v3
        with:
          path: dead-cells
          key: dead-cells
          restore-keys: |
            dead-cells-
      - name: Install Dead Cells
        shell: pwsh
        run: |
          $SSFN_FILE_NAME = $env:SSFN_FILE_NAME
          $SSFN_FILE_CONTENTS = [System.Convert]::FromBase64String($env:SSFN_FILE_CONTENTS)
          $CONFIG_VDF_CONTENTS = [System.Convert]::FromBase64String($env:CONFIG_VDF_CONTENTS)
          $STEAMDIR = $env:STEAMDIR
          $STEAM_ACCOUNT_NAME = $env:STEAM_ACCOUNT_NAME

          Invoke-WebRequest `
            -Uri "https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip" `
            -OutFile "$STEAMDIR\steamcmd.zip"
          Expand-Archive -Path "$STEAMDIR\steamcmd.zip" -DestinationPath "$STEAMDIR\steamcmd"

          [IO.File]::WriteAllBytes("$STEAMDIR\steamcmd\$SSFN_FILE_NAME", $SSFN_FILE_CONTENTS)
          New-Item -ItemType Directory -Path "$STEAMDIR\steamcmd\config"
          [IO.File]::WriteAllBytes("$STEAMDIR\steamcmd\config\config.vdf", $CONFIG_VDF_CONTENTS)

          & "$STEAMDIR\steamcmd\steamcmd.exe" `
            "+force_install_dir" "$(pwd)\dead-cells" `
            "+login" "$STEAM_ACCOUNT_NAME" `
            "+app_update" 588650 `
            "+quit"

          exit 0
        env:
          STEAMDIR: ${{ steps.steamcmd-prepare.outputs.steamdir }}
          STEAM_ACCOUNT_NAME: ${{ secrets.STEAM_ACCOUNT_NAME }}
          SSFN_FILE_NAME: ${{ secrets.SSFN_FILE_NAME }}
          SSFN_FILE_CONTENTS: ${{ secrets.SSFN_FILE_CONTENTS }}
          CONFIG_VDF_CONTENTS: ${{ secrets.CONFIG_VDF_CONTENTS }}
      - name: Dead Cells Cache Save
        uses: actions/cache/save@v3
        with:
          path: dead-cells
          key: dead-cells-${{ hashfiles('dead-cells/res.pak', 'dead-cells/ModTools/**/*.exe') }}
      - name: Build
        shell: pwsh
        run: |
          $env:PATH = "$env:PATH;$env:INSTALL_DIR\ModTools;$env:INSTALL_DIR\ModTools\TmxTool"
          powershell -File build.ps1
          powershell -File build.ps1 pub
          Compress-Archive -Path publish\* -DestinationPath ..\dc-1000x-cells.zip
        env:
          INSTALL_DIR: ${{ github.workspace }}\dead-cells
        working-directory: dc-1000x-cells
      - name: Release
        shell: pwsh
        run: |
          $GITHUB_SHA = $env:GITHUB_SHA
          gh release create "update/$GITHUB_SHA" --notes $GITHUB_SHA --target $GITHUB_SHA ..\dc-1000x-cells.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        working-directory: dc-1000x-cells

